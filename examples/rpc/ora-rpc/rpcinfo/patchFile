644c
	vers = (int) atoi(argv[c]);
	if (argc > (c+1)) anyproc = (int) atoi(argv[c+1]);
.
639,640c
getvers(argv, c, argc)
	char **argv;
	int c, argc;
.
612,613c
	fprintf(stderr, "       rpcinfo -b program versnum [procnum]\n");
	fprintf(stderr, "       rpcinfo -d program versnum\n") ;
.
609,610c
	fprintf(stderr, "Usage: rpcinfo [ -n portnum ] -u host program [ versnum [procnum]]\n");
	fprintf(stderr, "       rpcinfo [ -n portnum ] -t host program [ versnum [procnum]]\n");
.
598c
	version_num = getvers(argv, 1, argc);
.
596a
#endif
.
592a
#ifdef OLD
.
572,573c
	vers = getvers(argv, 1, argc);
	rpc_stat = clnt_broadcast(prognum, vers, anyproc, xdr_void,
.
567c
	if ((argc < 2) || (argc > 3)) {
.
435c
		rpc_stat = clnt_call(client, anyproc, xdr_void, (char *)NULL,
.
424c
		vers = getvers(argv, 2, argc);
.
414c
			rpc_stat = clnt_call(client, anyproc, xdr_void, (char *)NULL,
.
377c
			rpc_stat = clnt_call(client, anyproc, xdr_void,
.
356c
		rpc_stat = clnt_call(client, anyproc, xdr_void, (char *)NULL,
.
334c
	if (argc < 2 || argc > 4) {
.
309c
		rpc_stat = clnt_call(client, anyproc, xdr_void, (char *)NULL,
.
296c
		vers = getvers(argv, 2, argc);
.
288c
			rpc_stat = clnt_call(client, anyproc, xdr_void,
.
251c
			rpc_stat = clnt_call(client, anyproc, xdr_void,
.
228c
		rpc_stat = clnt_call(client, anyproc, xdr_void, (char *)NULL,
.
198c
	if (argc < 2 || argc > 4) {
.
97c
	while ((c = getopt(argc, argv, "cptubdn:")) != EOF) {
.
81a
/* stuff added to allow arbitrary procedure calling,
   modified getvers() and all its uses to pick-up an optional
   proc. number */
u_long anyproc = NULLPROC;

.
